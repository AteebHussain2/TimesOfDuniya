// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(cuid())
  username  String  @unique
  firstName String
  lastName  String?
  email     String  @unique
  role      Role    @default(MEMBER)
  imageUrl  String?

  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  EDITOR
  MODERATOR
  MEMBER
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  thumbnail String
  slug      String  @unique
  summary   String?
  content   String

  published   Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  views  Int      @default(0)
  labels String[] // optional custom keywords

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])

  tags Tag[] @relation("PostTags")
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  slug        String  @unique
  description String?
  posts       Post[]

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] @relation("PostTags")
}
